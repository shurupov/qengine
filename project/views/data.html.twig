
{%- macro value(page, path) -%}
    {%- set value = page -%}
    {%- for key in path|split('.') -%}
        {%- set value = value[key] -%}
    {%- endfor -%}
    {{- value | raw -}}
{%- endmacro -%}

{% macro text(value, slug, path, editMode = false, inModal = false) %}
    {% import _self as data %}
    {% if editMode %}
        <e{% if inModal %}s{% endif %} data-type="text" data-url="/change" data-pk="{{ slug }}" data-name="{{ path }}"{% if title is not empty %} data-title="{{ title }}"{% endif %}>{{ value | raw }}</e{% if inModal %}s{% endif %}>
    {% else %}
        {{- value | raw -}}
    {% endif %}
{% endmacro %}

{%- macro textarea(value, slug, path, editMode = false, inModal = false) -%}
    {%- import _self as data -%}
    {%- if editMode -%}
        <e{% if inModal %}s{% endif %} data-type="textarea" data-url="/change" data-pk="{{ slug }}" data-name="{{ path }}">{{ value | raw }}</e{% if inModal %}s{% endif %}>
    {%- else -%}
        {{- value | raw -}}
    {%- endif -%}
{% endmacro %}

{%- macro a(value, slug, path, editMode = false, attrs = {}) -%}
    {%- import _self as data -%}
    {%- if editMode -%}
        <e data-type="link"{% for key,val in attrs %} {{ key | raw }}="{{ val | raw }}"{% endfor %} data-url="/change" data-pk="{{ slug }}" data-name="{{ path }}" data-value="{url: '{{ value.url | raw }}', text: '{{ value.text | raw }}'}">{{ value.text | raw }}</e>
    {%- else -%}
        <a href="{{ value.url | raw }}"{% for key,val in attrs %} {{ key | raw }}="{{ val | raw }}"{% endfor %} data-url="/change" data-pk="{{ slug }}" data-name="{{ path }}">{{ value.text | raw }}</a>
    {%- endif -%}
{% endmacro %}

{% macro image(value, slug, path, editMode = false, attrs = {}, default = "") %}
    {% import _self as data %}
    {% if value is empty %}
        {% set value = default %}
    {% endif %}
    {% if editMode %}
        {% set id = path | replace({'.': '-'}) %}
        <input type="hidden" id="{{ id | raw }}" />
        <edim class="edit-image" data-fancybox data-src="/filemanager/dialog.php?type=1&lang=ru&relative_url=1&field_id={{ id | raw }}" data-type="iframe"><img id="{{ id | raw }}-image" src="{{ value | raw }}"{% for key,val in attrs %} {{ key | raw }}="{{ val | raw }}"{% endfor %}></edim>
    {% else %}
        <img src="{{ value | raw }}"{% for key,val in attrs %} {{ key | raw }}="{{ val | raw }}"{% endfor %}>
    {% endif %}
{% endmacro %}

{% macro setImageButton(value, slug, path, editMode = false, default = "") %}
    {% import _self as data %}
    {% if value is empty %}
        {% set value = default %}
    {% endif %}
    {% if editMode %}
        {% set id = path | replace({'.': '-'}) %}
        <input type="hidden" id="{{ id | raw }}" />
        <edim class="edit-image" data-fancybox data-src="/filemanager/dialog.php?type=1&lang=ru&relative_url=1&field_id={{ id | raw }}" data-type="iframe"><span class="glyphicon glyphicon-picture" aria-hidden="true"></span></edim>
    {% endif %}
{% endmacro %}

{% macro setImagePreviewButton(value, slug, path, editMode = false, default = '/source/previewDefault.jpg') %}
    {% import _self as data %}
    {% if value is empty %}
        {% set value = default %}
    {% endif %}
    {% if editMode %}
        {% set id = path | replace({'.': '-'}) %}
        <input type="hidden" id="{{ id | raw }}" />
        <edim class="edit-image" data-fancybox data-src="/filemanager/dialog.php?type=1&lang=ru&relative_url=1&field_id={{ id | raw }}" data-type="iframe"><img id="{{ id | raw }}-preview" src="{{ value | replace({'/source/': '/thumbs/'}) }}" /></edim>
    {% endif %}
{% endmacro %}

{% macro addImagePreviewButton(path, slug, editMode = false, caption = "Добавить элемент") %}
    {% if editMode %}<button type="button" class="btn btn-primary btn-add-image-preview" data-path="{{ path | raw }}" data-pk="{{ slug }}">{{ caption }}</button>{% endif %}
{% endmacro %}

{% macro select(value, slug, path, editMode = false, options = [], inSettings = false) %}
    {% import _self as data %}
    {% if editMode %}
        {% set initCaption = "Пусто" %}
        {% for option in options %}
            {% if value == option.value %}
                {% set initCaption = option.text %}
            {% endif %}
        {% endfor %}
        <e{% if inSettings %}s{% endif %} data-type="select" data-url="/change" data-pk="{{ slug }}" data-name="{{ path }}" data-value="{{ value | raw }}" data-source="{{ options | json_encode }}">{{ initCaption | raw }}</e{% if inSettings %}s{% endif %}>
    {% else %}
        {{- value | raw -}}
    {% endif %}
{% endmacro %}

{% macro settingsButton(path, editMode = false) %}
    {% if editMode %}
        <edse data-toggle="modal" data-target="#{{ path | replace({'.': '-'}) | raw }}-modal"><span class="glyphicon glyphicon-cog" aria-hidden="true"></span></edse>
    {% endif %}
{% endmacro %}

{% macro addElementButton(path, slug, editMode = false, caption = "Добавить объект") %}
    {% if editMode %}<button type="button" class="btn btn-primary btn-add-object" data-path="{{ path | raw }}" data-pk="{{ slug }}">{{ caption }}</button>{% endif %}
{% endmacro %}

{% macro addItemButton(path, slug, editMode = false, caption = "Добавить пункт") %}
    {% if editMode %}<button type="button" class="btn btn-primary btn-add-item" data-path="{{ path | raw }}" data-pk="{{ slug }}">{{ caption }}</button>{% endif %}
{% endmacro %}

{% macro removeElementButton(path, slug, editMode = false, inModal = false) %}
    {% if editMode %}<reel class="btn-remove-element" data-path="{{ path | raw }}" data-pk="{{ slug }}"{% if inModal %} data-inmodal="true"{% endif %}><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></reel>{% endif %}
{% endmacro %}

{% macro removeElementBigButton(path, slug, editMode = false, caption = "Удалить элемент") %}
    {% if editMode %}<button type="button" class="btn btn-primary btn-remove-element" data-path="{{ path | raw }}" data-pk="{{ slug }}">{{ caption }}</button>{% endif %}
{% endmacro %}

{% macro settingsModal(value, slug, path, editors, editMode = false) %}

    {% import _self as data %}

    <!-- Settings Modal -->
    {% set id = path | replace({'.': '-'}) %}
    <div class="modal modal-settings" id="{{ id | raw }}-modal" tabindex="-1" role="dialog" aria-labelledby="{{ id | raw }}-modal-label" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 id="{{ id | raw }}-modal-label" class="modal-title text-center">Настройки секции</h4>
                </div>
                <div class="modal-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            {% for key,editor in editors %}
                                {% if editor.type == "text" %}
                                    <tr>
                                        <td>{{ editor.title }}</td>
                                        <td>{{ data.text(value[key], slug, path ~ '.' ~ key, editMode, true) }}</td>
                                    </tr>
                                {% elseif editor.type == "textarea" %}
                                    <tr>
                                        <td>{{ editor.title }}</td>
                                        <td>{{ data.textarea(value[key], slug, path ~ '.' ~ key, editMode, true) }}</td>
                                    </tr>
                                {% elseif editor.type == "select" %}
                                    <tr>
                                        <td>{{ editor.title }}</td>
                                        <td>{{ data.select(value[key], slug, path ~ '.' ~ key, editMode,  editor.options, true) }}</td>
                                    </tr>
                                {% elseif editor.type == "image" %}
                                    <tr>
                                        <td>{{ editor.title }}</td>
                                        <td>{{ data.setImagePreviewButton(value[key], slug, path ~ '.' ~ key, editMode) }}</td>
                                    </tr>
                                {% elseif editor.type == "list" and editor.listType == "image" %}
                                    <tr>
                                        <td colspan="2">
                                            <h4>{{ editor.title }}</h4>
                                            <div class="image-list">
                                            {% for ki, image in value[key] %}
                                                <div class="pull-left editor-image-list-element" id="{{ (path ~ '.' ~ key ~ '.' ~ ki) | replace({'.' : '-'}) }}-container">
                                                {% set imagePath = path ~ '.' ~ key ~ '.' ~ ki %}
                                                {{ data.setImagePreviewButton(image, slug, imagePath, editMode) }}
                                                {{ data.removeElementButton(imagePath, slug, editMode, true ) }}
                                                </div>
                                            {% endfor %}
                                            </div>
                                            <div class="clearfix"></div>
                                            {{ data.addImagePreviewButton(path ~ '.' ~ key, slug, editMode, "Добавить картинку") }}
                                        </td>
                                    </tr>
                                {% endif %}
                            {% endfor %}
                        </table>
                    </div>

                </div><!--//modal-body-->
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
                    <button type="button" class="btn btn-primary btn-apply-now">Применить сейчас</button>
                </div>
            </div><!--//modal-content-->
        </div><!--//modal-dialog-->
    </div><!--//modal-->

{% endmacro %}